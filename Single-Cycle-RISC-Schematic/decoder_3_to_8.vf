////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : decoder_3_to_8.vf
// /___/   /\     Timestamp : 09/09/2022 13:30:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family virtex6 -verilog C:/Users/USER/Desktop/Single-Cycle-RISC-Schematic/Single-Cycle-RISC-Schematic/decoder_3_to_8.vf -w C:/Users/USER/Desktop/Single-Cycle-RISC-Schematic/Single-Cycle-RISC-Schematic/decoder_3_to_8.sch
//Design Name: decoder_3_to_8
//Device: virtex6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module decoder_3_to_8(x0, 
                      x1, 
                      x2, 
                      Y0, 
                      Y1, 
                      Y2, 
                      Y3, 
                      Y4, 
                      Y5, 
                      Y6, 
                      Y7);

    input x0;
    input x1;
    input x2;
   output Y0;
   output Y1;
   output Y2;
   output Y3;
   output Y4;
   output Y5;
   output Y6;
   output Y7;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_22;
   wire XLXN_24;
   wire XLXN_28;
   wire XLXN_32;
   wire XLXN_33;
   wire XLXN_35;
   wire XLXN_39;
   
   AND3  XLXI_1 (.I0(XLXN_3), 
                .I1(XLXN_2), 
                .I2(XLXN_1), 
                .O(Y0));
   INV  XLXI_2 (.I(x2), 
               .O(XLXN_1));
   INV  XLXI_3 (.I(x1), 
               .O(XLXN_2));
   INV  XLXI_4 (.I(x0), 
               .O(XLXN_3));
   AND3  XLXI_5 (.I0(x0), 
                .I1(XLXN_9), 
                .I2(XLXN_8), 
                .O(Y1));
   INV  XLXI_6 (.I(x2), 
               .O(XLXN_8));
   INV  XLXI_7 (.I(x1), 
               .O(XLXN_9));
   AND3  XLXI_12 (.I0(XLXN_24), 
                 .I1(x1), 
                 .I2(XLXN_22), 
                 .O(Y2));
   INV  XLXI_13 (.I(x2), 
                .O(XLXN_22));
   INV  XLXI_15 (.I(x0), 
                .O(XLXN_24));
   AND3  XLXI_20 (.I0(x0), 
                 .I1(x1), 
                 .I2(XLXN_28), 
                 .O(Y3));
   INV  XLXI_21 (.I(x2), 
                .O(XLXN_28));
   AND3  XLXI_24 (.I0(XLXN_33), 
                 .I1(XLXN_32), 
                 .I2(x2), 
                 .O(Y4));
   INV  XLXI_26 (.I(x1), 
                .O(XLXN_32));
   INV  XLXI_27 (.I(x0), 
                .O(XLXN_33));
   AND3  XLXI_28 (.I0(x0), 
                 .I1(XLXN_35), 
                 .I2(x2), 
                 .O(Y5));
   INV  XLXI_30 (.I(x1), 
                .O(XLXN_35));
   AND3  XLXI_32 (.I0(XLXN_39), 
                 .I1(x1), 
                 .I2(x2), 
                 .O(Y6));
   INV  XLXI_35 (.I(x0), 
                .O(XLXN_39));
   AND3  XLXI_36 (.I0(x0), 
                 .I1(x1), 
                 .I2(x2), 
                 .O(Y7));
endmodule
