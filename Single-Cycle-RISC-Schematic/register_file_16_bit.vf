////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : register_file_16_bit.vf
// /___/   /\     Timestamp : 10/18/2022 17:12:03
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family virtex6 -verilog C:/Users/ib701/Desktop/Single-Cycle-RISC-Schematic/Single-Cycle-RISC-Schematic/register_file_16_bit.vf -w C:/Users/ib701/Desktop/Single-Cycle-RISC-Schematic/Single-Cycle-RISC-Schematic/register_file_16_bit.sch
//Design Name: register_file_16_bit
//Device: virtex6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module OR8_HXILINX_register_file_16_bit (O, I0, I1, I2, I3, I4, I5, I6, I7);
    

   output O;

   input I0;
   input I1;
   input I2;
   input I3;
   input I4;
   input I5;
   input I6;
   input I7;

assign O = (I0 || I1 || I2 || I3 || I4 || I5 || I6 || I7);

endmodule
`timescale 1ns / 1ps

module D_flip_flop_16_bit_MUSER_register_file_16_bit(clk, 
                                                     clr, 
                                                     D, 
                                                     LOAD, 
                                                     Q);

    input clk;
    input clr;
    input [15:0] D;
    input LOAD;
   output [15:0] Q;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_40 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[15]), 
                 .Q(Q[15]));
   FDCE #( .INIT(1'b0) ) XLXI_41 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[14]), 
                 .Q(Q[14]));
   FDCE #( .INIT(1'b0) ) XLXI_42 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[13]), 
                 .Q(Q[13]));
   FDCE #( .INIT(1'b0) ) XLXI_43 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[12]), 
                 .Q(Q[12]));
   FDCE #( .INIT(1'b0) ) XLXI_44 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[11]), 
                 .Q(Q[11]));
   FDCE #( .INIT(1'b0) ) XLXI_45 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[10]), 
                 .Q(Q[10]));
   FDCE #( .INIT(1'b0) ) XLXI_46 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[9]), 
                 .Q(Q[9]));
   FDCE #( .INIT(1'b0) ) XLXI_47 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[8]), 
                 .Q(Q[8]));
   FDCE #( .INIT(1'b0) ) XLXI_48 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[0]), 
                 .Q(Q[0]));
   FDCE #( .INIT(1'b0) ) XLXI_49 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[1]), 
                 .Q(Q[1]));
   FDCE #( .INIT(1'b0) ) XLXI_50 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[2]), 
                 .Q(Q[2]));
   FDCE #( .INIT(1'b0) ) XLXI_51 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[3]), 
                 .Q(Q[3]));
   FDCE #( .INIT(1'b0) ) XLXI_52 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[4]), 
                 .Q(Q[4]));
   FDCE #( .INIT(1'b0) ) XLXI_53 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[5]), 
                 .Q(Q[5]));
   FDCE #( .INIT(1'b0) ) XLXI_54 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[6]), 
                 .Q(Q[6]));
   FDCE #( .INIT(1'b0) ) XLXI_55 (.C(clk), 
                 .CE(LOAD), 
                 .CLR(clr), 
                 .D(D[7]), 
                 .Q(Q[7]));
endmodule
`timescale 1ns / 1ps

module multiplexer_8_to_1_MUSER_register_file_16_bit(I0, 
                                                     I1, 
                                                     I2, 
                                                     I3, 
                                                     I4, 
                                                     I5, 
                                                     I6, 
                                                     I7, 
                                                     S0, 
                                                     S1, 
                                                     S2, 
                                                     Y);

    input I0;
    input I1;
    input I2;
    input I3;
    input I4;
    input I5;
    input I6;
    input I7;
    input S0;
    input S1;
    input S2;
   output Y;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_34;
   wire XLXN_36;
   wire XLXN_38;
   wire XLXN_42;
   wire XLXN_46;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_54;
   wire XLXN_59;
   wire XLXN_62;
   wire XLXN_68;
   wire XLXN_78;
   wire XLXN_83;
   wire XLXN_88;
   
   AND4  XLXI_1 (.I0(I0), 
                .I1(XLXN_3), 
                .I2(XLXN_2), 
                .I3(XLXN_1), 
                .O(XLXN_5));
   INV  XLXI_3 (.I(S2), 
               .O(XLXN_1));
   INV  XLXI_4 (.I(S1), 
               .O(XLXN_2));
   INV  XLXI_5 (.I(S0), 
               .O(XLXN_3));
   AND4  XLXI_10 (.I0(I1), 
                 .I1(S0), 
                 .I2(XLXN_27), 
                 .I3(XLXN_26), 
                 .O(XLXN_83));
   INV  XLXI_11 (.I(S2), 
                .O(XLXN_26));
   INV  XLXI_12 (.I(S1), 
                .O(XLXN_27));
   AND4  XLXI_14 (.I0(I2), 
                 .I1(XLXN_36), 
                 .I2(S1), 
                 .I3(XLXN_34), 
                 .O(XLXN_38));
   INV  XLXI_15 (.I(S2), 
                .O(XLXN_34));
   INV  XLXI_17 (.I(S0), 
                .O(XLXN_36));
   AND4  XLXI_18 (.I0(I3), 
                 .I1(S0), 
                 .I2(S1), 
                 .I3(XLXN_42), 
                 .O(XLXN_46));
   INV  XLXI_19 (.I(S2), 
                .O(XLXN_42));
   AND4  XLXI_22 (.I0(I4), 
                 .I1(XLXN_52), 
                 .I2(XLXN_51), 
                 .I3(S2), 
                 .O(XLXN_54));
   INV  XLXI_24 (.I(S1), 
                .O(XLXN_51));
   INV  XLXI_25 (.I(S0), 
                .O(XLXN_52));
   AND4  XLXI_26 (.I0(I5), 
                 .I1(S0), 
                 .I2(XLXN_59), 
                 .I3(S2), 
                 .O(XLXN_62));
   INV  XLXI_28 (.I(S1), 
                .O(XLXN_59));
   AND4  XLXI_30 (.I0(I6), 
                 .I1(XLXN_68), 
                 .I2(S1), 
                 .I3(S2), 
                 .O(XLXN_88));
   INV  XLXI_33 (.I(S0), 
                .O(XLXN_68));
   AND4  XLXI_34 (.I0(I7), 
                 .I1(S0), 
                 .I2(S1), 
                 .I3(S2), 
                 .O(XLXN_78));
   (* HU_SET = "XLXI_38_0" *) 
   OR8_HXILINX_register_file_16_bit  XLXI_38 (.I0(XLXN_78), 
                                             .I1(XLXN_88), 
                                             .I2(XLXN_62), 
                                             .I3(XLXN_54), 
                                             .I4(XLXN_46), 
                                             .I5(XLXN_38), 
                                             .I6(XLXN_83), 
                                             .I7(XLXN_5), 
                                             .O(Y));
endmodule
`timescale 1ns / 1ps

module multiplexer_8_to_1_16_bit_MUSER_register_file_16_bit(I0, 
                                                            I1, 
                                                            I2, 
                                                            I3, 
                                                            I4, 
                                                            I5, 
                                                            I6, 
                                                            I7, 
                                                            S0, 
                                                            S1, 
                                                            S2, 
                                                            Y);

    input [15:0] I0;
    input [15:0] I1;
    input [15:0] I2;
    input [15:0] I3;
    input [15:0] I4;
    input [15:0] I5;
    input [15:0] I6;
    input [15:0] I7;
    input S0;
    input S1;
    input S2;
   output [15:0] Y;
   
   
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_1 (.I0(I0[15]), 
                                                         .I1(I1[15]), 
                                                         .I2(I2[15]), 
                                                         .I3(I3[15]), 
                                                         .I4(I4[15]), 
                                                         .I5(I5[15]), 
                                                         .I6(I6[15]), 
                                                         .I7(I7[15]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[15]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_2 (.I0(I0[14]), 
                                                         .I1(I1[14]), 
                                                         .I2(I2[14]), 
                                                         .I3(I3[14]), 
                                                         .I4(I4[14]), 
                                                         .I5(I5[14]), 
                                                         .I6(I6[14]), 
                                                         .I7(I7[14]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[14]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_3 (.I0(I0[13]), 
                                                         .I1(I1[13]), 
                                                         .I2(I2[13]), 
                                                         .I3(I3[13]), 
                                                         .I4(I4[13]), 
                                                         .I5(I5[13]), 
                                                         .I6(I6[13]), 
                                                         .I7(I7[13]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[13]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_4 (.I0(I0[12]), 
                                                         .I1(I1[12]), 
                                                         .I2(I2[12]), 
                                                         .I3(I3[12]), 
                                                         .I4(I4[12]), 
                                                         .I5(I5[12]), 
                                                         .I6(I6[12]), 
                                                         .I7(I7[12]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[12]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_5 (.I0(I0[11]), 
                                                         .I1(I1[11]), 
                                                         .I2(I2[11]), 
                                                         .I3(I3[11]), 
                                                         .I4(I4[11]), 
                                                         .I5(I5[11]), 
                                                         .I6(I6[11]), 
                                                         .I7(I7[11]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[11]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_6 (.I0(I0[10]), 
                                                         .I1(I1[10]), 
                                                         .I2(I2[10]), 
                                                         .I3(I3[10]), 
                                                         .I4(I4[10]), 
                                                         .I5(I5[10]), 
                                                         .I6(I6[10]), 
                                                         .I7(I7[10]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[10]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_7 (.I0(I0[9]), 
                                                         .I1(I1[9]), 
                                                         .I2(I2[9]), 
                                                         .I3(I3[9]), 
                                                         .I4(I4[9]), 
                                                         .I5(I5[9]), 
                                                         .I6(I6[9]), 
                                                         .I7(I7[9]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[9]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_8 (.I0(I0[8]), 
                                                         .I1(I1[8]), 
                                                         .I2(I2[8]), 
                                                         .I3(I3[8]), 
                                                         .I4(I4[8]), 
                                                         .I5(I5[8]), 
                                                         .I6(I6[8]), 
                                                         .I7(I7[8]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[8]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_9 (.I0(I0[7]), 
                                                         .I1(I1[7]), 
                                                         .I2(I2[7]), 
                                                         .I3(I3[7]), 
                                                         .I4(I4[7]), 
                                                         .I5(I5[7]), 
                                                         .I6(I6[7]), 
                                                         .I7(I7[7]), 
                                                         .S0(S0), 
                                                         .S1(S1), 
                                                         .S2(S2), 
                                                         .Y(Y[7]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_10 (.I0(I0[6]), 
                                                          .I1(I1[6]), 
                                                          .I2(I2[6]), 
                                                          .I3(I3[6]), 
                                                          .I4(I4[6]), 
                                                          .I5(I5[6]), 
                                                          .I6(I6[6]), 
                                                          .I7(I7[6]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[6]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_11 (.I0(I0[5]), 
                                                          .I1(I1[5]), 
                                                          .I2(I2[5]), 
                                                          .I3(I3[5]), 
                                                          .I4(I4[5]), 
                                                          .I5(I5[5]), 
                                                          .I6(I6[5]), 
                                                          .I7(I7[5]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[5]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_12 (.I0(I0[4]), 
                                                          .I1(I1[4]), 
                                                          .I2(I2[4]), 
                                                          .I3(I3[4]), 
                                                          .I4(I4[4]), 
                                                          .I5(I5[4]), 
                                                          .I6(I6[4]), 
                                                          .I7(I7[4]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[4]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_13 (.I0(I0[3]), 
                                                          .I1(I1[3]), 
                                                          .I2(I2[3]), 
                                                          .I3(I3[3]), 
                                                          .I4(I4[3]), 
                                                          .I5(I5[3]), 
                                                          .I6(I6[3]), 
                                                          .I7(I7[3]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[3]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_14 (.I0(I0[2]), 
                                                          .I1(I1[2]), 
                                                          .I2(I2[2]), 
                                                          .I3(I3[2]), 
                                                          .I4(I4[2]), 
                                                          .I5(I5[2]), 
                                                          .I6(I6[2]), 
                                                          .I7(I7[2]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[2]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_15 (.I0(I0[1]), 
                                                          .I1(I1[1]), 
                                                          .I2(I2[1]), 
                                                          .I3(I3[1]), 
                                                          .I4(I4[1]), 
                                                          .I5(I5[1]), 
                                                          .I6(I6[1]), 
                                                          .I7(I7[1]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[1]));
   multiplexer_8_to_1_MUSER_register_file_16_bit  XLXI_16 (.I0(I0[0]), 
                                                          .I1(I1[0]), 
                                                          .I2(I2[0]), 
                                                          .I3(I3[0]), 
                                                          .I4(I4[0]), 
                                                          .I5(I5[0]), 
                                                          .I6(I6[0]), 
                                                          .I7(I7[0]), 
                                                          .S0(S0), 
                                                          .S1(S1), 
                                                          .S2(S2), 
                                                          .Y(Y[0]));
endmodule
`timescale 1ns / 1ps

module decoder_3_to_8_en_MUSER_register_file_16_bit(en, 
                                                    x0, 
                                                    x1, 
                                                    x2, 
                                                    Y0, 
                                                    Y1, 
                                                    Y2, 
                                                    Y3, 
                                                    Y4, 
                                                    Y5, 
                                                    Y6, 
                                                    Y7);

    input en;
    input x0;
    input x1;
    input x2;
   output Y0;
   output Y1;
   output Y2;
   output Y3;
   output Y4;
   output Y5;
   output Y6;
   output Y7;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_9;
   wire XLXN_14;
   wire XLXN_17;
   wire XLXN_30;
   wire XLXN_43;
   wire XLXN_89;
   
   INV  XLXI_1 (.I(x0), 
               .O(XLXN_3));
   INV  XLXI_2 (.I(x1), 
               .O(XLXN_5));
   INV  XLXI_3 (.I(x2), 
               .O(XLXN_6));
   INV  XLXI_5 (.I(x2), 
               .O(XLXN_1));
   INV  XLXI_6 (.I(x1), 
               .O(XLXN_2));
   INV  XLXI_7 (.I(x2), 
               .O(XLXN_7));
   INV  XLXI_8 (.I(x0), 
               .O(XLXN_9));
   INV  XLXI_21 (.I(x2), 
                .O(XLXN_89));
   INV  XLXI_26 (.I(x1), 
                .O(XLXN_14));
   INV  XLXI_27 (.I(x0), 
                .O(XLXN_30));
   INV  XLXI_30 (.I(x1), 
                .O(XLXN_17));
   INV  XLXI_35 (.I(x0), 
                .O(XLXN_43));
   AND4  XLXI_45 (.I0(en), 
                 .I1(XLXN_3), 
                 .I2(XLXN_5), 
                 .I3(XLXN_6), 
                 .O(Y0));
   AND4  XLXI_49 (.I0(en), 
                 .I1(x0), 
                 .I2(XLXN_2), 
                 .I3(XLXN_1), 
                 .O(Y1));
   AND4  XLXI_53 (.I0(en), 
                 .I1(XLXN_9), 
                 .I2(x1), 
                 .I3(XLXN_7), 
                 .O(Y2));
   AND4  XLXI_56 (.I0(en), 
                 .I1(x0), 
                 .I2(x1), 
                 .I3(XLXN_89), 
                 .O(Y3));
   AND4  XLXI_60 (.I0(en), 
                 .I1(XLXN_30), 
                 .I2(XLXN_14), 
                 .I3(x2), 
                 .O(Y4));
   AND4  XLXI_63 (.I0(en), 
                 .I1(x0), 
                 .I2(XLXN_17), 
                 .I3(x2), 
                 .O(Y5));
   AND4  XLXI_66 (.I0(en), 
                 .I1(XLXN_43), 
                 .I2(x1), 
                 .I3(x2), 
                 .O(Y6));
   AND4  XLXI_68 (.I0(en), 
                 .I1(x0), 
                 .I2(x1), 
                 .I3(x2), 
                 .O(Y7));
endmodule
`timescale 1ns / 1ps

module register_file_16_bit(clk, 
                            clr, 
                            Read_Addr_A, 
                            Read_Addr_B, 
                            Write_Addr, 
                            Write_Data, 
                            Write_En, 
                            OutA, 
                            OutB);

    input clk;
    input clr;
    input [2:0] Read_Addr_A;
    input [2:0] Read_Addr_B;
    input [2:0] Write_Addr;
    input [15:0] Write_Data;
    input Write_En;
   output [15:0] OutA;
   output [15:0] OutB;
   
   wire [15:0] I0;
   wire [15:0] I1;
   wire [15:0] I2;
   wire [15:0] I3;
   wire [15:0] I4;
   wire [15:0] I5;
   wire [15:0] I6;
   wire [15:0] I7;
   wire XLXN_101;
   wire XLXN_102;
   wire XLXN_103;
   wire XLXN_104;
   wire XLXN_105;
   wire XLXN_107;
   wire XLXN_109;
   wire XLXN_111;
   
   decoder_3_to_8_en_MUSER_register_file_16_bit  XLXI_1 (.en(Write_En), 
                                                        .x0(Write_Addr[0]), 
                                                        .x1(Write_Addr[1]), 
                                                        .x2(Write_Addr[2]), 
                                                        .Y0(XLXN_111), 
                                                        .Y1(XLXN_109), 
                                                        .Y2(XLXN_107), 
                                                        .Y3(XLXN_105), 
                                                        .Y4(XLXN_104), 
                                                        .Y5(XLXN_103), 
                                                        .Y6(XLXN_102), 
                                                        .Y7(XLXN_101));
   multiplexer_8_to_1_16_bit_MUSER_register_file_16_bit  XLXI_10 
         (.I0(I0[15:0]), 
                                                                 .I1(I1[15:0]), 
                                                                 .I2(I2[15:0]), 
                                                                 .I3(I3[15:0]), 
                                                                 .I4(I4[15:0]), 
                                                                 .I5(I5[15:0]), 
                                                                 .I6(I6[15:0]), 
                                                                 .I7(I7[15:0]), 
                                                                 
         .S0(Read_Addr_A[0]), 
                                                                 
         .S1(Read_Addr_A[1]), 
                                                                 
         .S2(Read_Addr_A[2]), 
                                                                 
         .Y(OutA[15:0]));
   multiplexer_8_to_1_16_bit_MUSER_register_file_16_bit  XLXI_21 
         (.I0(I0[15:0]), 
                                                                 .I1(I1[15:0]), 
                                                                 .I2(I2[15:0]), 
                                                                 .I3(I3[15:0]), 
                                                                 .I4(I4[15:0]), 
                                                                 .I5(I5[15:0]), 
                                                                 .I6(I6[15:0]), 
                                                                 .I7(I7[15:0]), 
                                                                 
         .S0(Read_Addr_B[0]), 
                                                                 
         .S1(Read_Addr_B[1]), 
                                                                 
         .S2(Read_Addr_B[2]), 
                                                                 
         .Y(OutB[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_22 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_101), 
                                                          .Q(I7[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_29 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_102), 
                                                          .Q(I6[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_32 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_103), 
                                                          .Q(I5[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_33 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_104), 
                                                          .Q(I4[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_34 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_105), 
                                                          .Q(I3[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_35 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_107), 
                                                          .Q(I2[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_36 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_109), 
                                                          .Q(I1[15:0]));
   D_flip_flop_16_bit_MUSER_register_file_16_bit  XLXI_37 (.clk(clk), 
                                                          .clr(clr), 
                                                          .D(Write_Data[15:0]), 
                                                          .LOAD(XLXN_111), 
                                                          .Q(I0[15:0]));
endmodule
